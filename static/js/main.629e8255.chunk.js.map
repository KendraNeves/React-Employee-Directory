{"version":3,"sources":["App.js","serviceWorker.js","service/employeeDataset.js","service/fieldDataset.js","components/listGroup.jsx","components/employeeList.jsx","index.js"],"names":["App","className","Boolean","window","location","hostname","match","laureates","_id","name","getLaureates","field","getFields","filter","f","ListGroup","props","onClick","onItemSelect","fields","map","EmployeeList","state","selectedField","sortColumn","handleFieldSelect","setState","handleSort","sortItem","this","laureate","sort","a","b","id","firstname","key","surname","origin","Component","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.629e8255.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n// import Employee from './components/employee';\n\nfunction App() {\n  return (\n    <main className=\"container mt-5\">\n\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const laureates = [\n\n  {\n    \"id\": \"843\",\n    \"firstname\": \"Ada E.\",\n    \"surname\": \"Yonath\",\n    \"origin\": \"Jerusalem\",\n    \"field\": { _id: \"b\", name: \"Chemistry\" },\n  },\n  {\n    \"id\": \"1\",\n    \"firstname\": \"Wilhelm Conrad\",\n    \"surname\": \"RÃ¶ntgen\",\n    \"origin\": \"Germany\",\n    \"field\": { _id: \"a\", name: \"Physics\" }\n  },\n  {\n    \"id\": \"2\",\n    \"firstname\": \"Hendrik A.\",\n    \"surname\": \"Lorentz\",\n    \"origin\": \"Netherlands\",\n    \"field\": { _id: \"a\", name: \"Physics\" }\n  },\n  {\n    \"id\": \"835\",\n    \"firstname\": \"Elizabeth H.\",\n    \"surname\": \"Blackburn\",\n    \"origin\": \"Tasmania\",\n    \"field\": { _id: \"c\", name: \"Medicine\" },\n  },\n  {\n    \"id\": \"3\",\n    \"firstname\": \"Pieter\",\n    \"surname\": \"Zeeman\",\n    \"origin\": \"Netherlands\",\n    \"field\": { _id: \"a\", name: \"Physics\" },\n  },\n  {\n    \"id\": \"824\",\n    \"firstname\": \"FranÃ§oise\",\n    \"surname\": \"BarrÃ©-Sinoussi\",\n    \"origin\": \"France\",\n    \"field\": { _id: \"c\", name: \"Medicine\" }\n  },\n  {\n    \"_id\": \"4\",\n    \"firstname\": \"Henri\",\n    \"surname\": \"Becquerel\",\n    \"origin\": \"France\",\n    \"field\": { _id: \"a\", name: \"Physics\" },\n  },\n  {\n    \"id\": \"5\",\n    \"firstname\": \"Pierre\",\n    \"surname\": \"Curie\",\n    \"origin\": \"France\",\n    \"field\": { _id: \"a\", name: \"Physics\" },\n  },\n  {\n    \"id\": \"230\",\n    \"firstname\": \"Dorothy Crowfoot\",\n    \"surname\": \"Hodgkin\",\n    \"origin\": \"United Kingdom\",\n    \"field\": { _id: \"b\", name: \"Chemistry\" },\n  },\n  {\n    \"id\": \"160\",\n    \"firstname\": \"Jacobus H.\",\n    \"surname\": \"van 't Hoff\",\n    \"origin\": \"Germany\",\n    \"field\": { _id: \"b\", name: \"Chemistry\" },\n  },\n  {\n    \"id\": \"6\",\n    \"firstname\": \"Marie\",\n    \"surname\": \"Curie\",\n    \"origin\": \"France\",\n    \"field\": { _id: \"b\", name: \"Chemistry\" },\n  },\n  {\n    \"id\": \"307\",\n    \"firstname\": \"Charles\",\n    \"surname\": \"Richet\",\n    \"origin\": \"France\",\n    \"field\": { _id: \"c\", name: \"Medicine\" },\n  },\n  {\n    \"id\": \"775\",\n    \"firstname\": \"Linda B.\",\n    \"surname\": \"Buck\",\n    \"origin\": \"USA\",\n    \"field\": { _id: \"c\", name: \"Medicine\" },\n  },\n  {\n    \"id\": \"963\",\n    \"firstname\": \"Frances H.\",\n    \"surname\": \"Arnold\",\n    \"origin\": \"USA\",\n    \"field\": { _id: \"b\", name: \"Chemistry\" },\n  },\n];\n\n\n\n\nexport function getLaureates() {\n  return laureates;\n}","export const field = [\n  { _id: \"a\", name: \"Physics\" },\n  { _id: \"b\", name: \"Chemistry\" },\n  { _id: \"c\", name: \"Medicine\" },\n\n];\n\nexport function getFields() {\n  return field.filter(f => f);\n}\n","import React from \"react\";\n\nfunction ListGroup(props) {\n  return (\n    <ul className=\"list-group\">\n      <li\n        className=\"list-group-item bg-transparent\"\n        onClick={() => {\n          props.onItemSelect(null);\n        }}\n      >\n        All Fields\n      </li>\n      {props.fields.map((field) => {\n        return (\n          <li\n            className=\"list-group-item bg-transparent\"\n            onClick={() => {\n              props.onItemSelect(field._id);\n            }}\n          >\n            {field.name}\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default ListGroup;\n","import React, { Component } from \"react\";\nimport { getLaureates } from \"../service/employeeDataset.js\";\nimport { getFields } from \"../service/fieldDataset\";\nimport ListGroup from \"./listGroup\";\nimport _ from \"lodash\";\n\nclass EmployeeList extends Component {\n  state = {\n    laureates: getLaureates(),\n    fields: getFields(),\n    selectedField: null,\n    sortColumn: \"id\",\n  };\n\n  handleFieldSelect = (field) => {\n    this.setState({ selectedField: field });\n  };\n\n  handleSort = () => {\n    var sortItem = this.state.sortColumn === \"id\" ? \"firstname\" : \"id\";\n\n    this.setState({ sortColumn: sortItem });\n  };\n\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col-12 col-md-2 text-center\">\n          <ListGroup\n            fields={this.state.fields}\n            onItemSelect={this.handleFieldSelect}\n          />\n        </div>\n        <div className=\"col-md-1\"></div>\n        <div className=\"col-12 col-md-6\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>\n                  First Name\n                  <button\n                    className=\"btn btn-secondary btn-sm ml-3\"\n                    onClick={() => {\n                      this.handleSort(\"firstname\");\n                    }}\n                  >\n                    Sort\n                  </button>\n                </th>\n                <th>Surname</th>\n                <th>Origin</th>\n                <th>Field</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.laureates\n                .filter((laureate) => {\n                  if (this.state.selectedField === null) {\n                    return true;\n                  }\n                  if (laureate.field._id === this.state.selectedField) {\n                    return true;\n                  } else {\n                    return false;\n                  }\n                })\n                .sort((a, b) => {\n                  if (this.state.sortColumn === \"id\") {\n                    if (a.id < b.id) {\n                      return -1;\n                    }\n                    if (a.id > b.id) {\n                      return 1;\n                    }\n                    // a must be equal to b\n                    return 0;\n                  } else if (this.state.sortColumn === \"firstname\") {\n                    if (a.firstname < b.firstname) {\n                      return -1;\n                    }\n                    if (a.firstname > b.firstname) {\n                      return 1;\n                    }\n                    // a must be equal to b\n                    return 0;\n                  }\n                })\n                .map((laureate) => (\n                  <tr key={laureate.id}>\n                    <td>{laureate.firstname}</td>\n                    <td>{laureate.surname}</td>\n                    <td>{laureate.origin}</td>\n                    <td>{laureate.field.name}</td>\n                    <td></td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        </div>\n        <div className=\"col-md-3\"></div>\n      </div>\n    );\n  }\n}\n\nexport default EmployeeList;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport EmployeeList from './components/employeeList';\n// import EmployeeList from './components/employeeList';\nimport \"bootstrap/dist/css/bootstrap.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <EmployeeList />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}